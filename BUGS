1.  Rock Ridge SF (Sparse file) entries don't work for parsing or generation.
2.  Support for UDF.
3.  Add a test for proper encoding of Joliet strings.
4.  Add tests to ensure that non-zero length symlinks get dealt with properly
    both for parsing and for writing back out (don't write them out, they have
    bogus data).
5.  Add tests to ensure that Rock Ridge CE records are the very last record in
    the Rock Ridge extensions (some OSs, like FreeBSD, doesn't like them if
    they aren't the last one).
6.  Add a test for Rockridge RR entries in 1.12 version ISOs.  This isn't
    technically allowed by the standard, but we have seen it in the wild, so
    we should have a test to make sure we don't break it.
7.  Add a test for "bare" El Torito section entries.  The El Torito standard
    requires that section entries beyond the initial entry all start with a
    section header, but we've seen ISOs in the wild where this isn't the case.
    Add a test to ensure that these entries still work.
8.  Add a test for when the El Torito boot catalog record is in a Rock Ridge
    Continuation Entry.
9.  Add a test for when the El Torito boot catalog record is in a Rock Ridge
    relocated directory record.
10. Add a test for padding in the XA records.
11. Break the API for progress_cb(), by making sure the user always has to
    have a function with a 3rd opaque argument.
12. Allow removal of El Torito entries without removing El Torito altogether.
    To do this, we'll need to look up the bootfile when removing and only
    remove the entry that corresponds to it, or the whole thing if it is
    the initial entry.
13. Show the "logical" Rock Ridge tree in pycdlib-explorer when the user
    requests the "rr" print mode.  This essentially means relocating Rock Ridge
    deep directory trees as appropriate.
14. Write tests for all combinations of add_file/rm_file/add_hard_link/rm_hard_link.
    This will probably end up being quite a few tests, because there are a lot of
    combinations:
    - ISO9660 only       - add_file, rm_file
    - ISO9660 only       - add_file, rm_hard_link
    - ISO9660 only       - add_file, add_hard_link, rm_file
    - ISO9660 only       - add_file, add_hard_link, rm_hard_link
    - ISO9660 only       - add_file, add_hard_link, rm_hard_link, rm_file
    - ISO9660 only       - add_file, add_hard_link, rm_hard_link, rm_hard_link
    - ISO9660 + Eltorito - add_file, add_eltorito, rm_eltorito, rm_file
    - ISO9660 + Eltorito - add_file, add_eltorito, rm_eltorito
    - ISO9660 + Eltorito - add_file, add_eltorito, rm_file
    - ISO9660 + Eltorito - add_file, add_eltorito, rm_hard_link (file), rm_hard_link (eltorito)
    - ISO9660 + Eltorito - add_file, add_eltorito, rm_hard_link (eltorito), rm_hard_link (file)
    - ISO9660 + Eltorito - add_file, add_eltorito, rm_hard_link (eltorito)
    - ISO9660 + Eltorito - add_file, add_eltorito, rm_hard_link (file)
    - ISO9660 + Eltorito - add_file, add_hard_link (eltorito), rm_hard_link (file), rm_hard_link (eltorito)
    - ISO9660 + Eltorito - add_file, add_hard_link (eltorito), rm_hard_link (eltorito), rm_hard_link (file)
    - ISO9660 + Eltorito - add_file, add_hard_link (eltorito), rm_file
    - ISO9660 + Joliet   - add_file, add_hard_link (joliet), rm_hard_link (joliet), rm_file
    - ISO9660 + Joliet   - add_file, add_hard_link (joliet), rm_hard_link (joliet)
    - ISO9660 + Joliet   - add_file, add_hard_link (joliet), rm_file
    - ISO9660 + Joliet   - add_file, add_hard_link (joliet), rm_hard_link (joliet), rm_hard_link
    - ISO9660 + Joliet   - add_file, rm_file
    - ISO9660 + Joliet   - add_file, add_hard_link (joliet), rm_hard_link, rm_hard_link (joliet)
    - ISO9660 + Eltorito + Joliet
